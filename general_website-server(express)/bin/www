#!/usr/bin/env node
var app = require('../app')
var debug = require('debug')('general-website-server:server')
var http = require('http')

require("../config/plugin");

/**
 * Get port from environment and store in Express.
 * 从环境中获取当前的端口和store
 */
// 设置端口号并启动工程并监听3000端
var port = normalizePort(process.env.PORT || '3000')
app.set('port', port)

// 创建http服务
var server = http.createServer(app)

/**
 * Listen on provided port, on all network interfaces.
 */
// 监听端口，处理请求
server.listen(port)
server.on('error', onError)
server.on('listening', onListening)

/**
 * Normalize a port into a number, string, or false.
 */
// 将端口规范化为数字、字符串或false。
function normalizePort(val) {
  var port = parseInt(val, 10)

  if (isNaN(port)) return val

  if (port >= 0) return port

  return false
}

/**
 * Event listener for HTTP server "error" event.
 */
// 监听错误事件
function onError(error) {
  if (error.syscall !== 'listen') {
    throw error
  }

  var bind = typeof port === 'string' ? 'Pipe ' + port : 'Port ' + port

  // handle specific listen errors with friendly messages
  switch (error.code) {
    case 'EACCES':
      console.error(bind + ' requires elevated privileges')
      process.exit(1)
      break
    case 'EADDRINUSE':
      console.error(bind + ' is already in use')
      process.exit(1)
      break
    default:
      throw error
  }
}

/**
 * Event listener for HTTP server "listening" event.
 */

function onListening() {
  var addr = server.address()
  var bind = typeof addr === 'string' ? 'pipe ' + addr : 'port ' + addr.port
  debug('Listening on ' + bind)
}
